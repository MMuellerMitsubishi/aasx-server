/*
 * DotAAS Part 2 | HTTP/REST | Entire API Collection
 *
 * The entire API collection as part of Details of the Asset Administration Shell Part 2
 *
 * OpenAPI spec version: V1.0RC03
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.V1RC03.Models
{ 
        /// <summary>
        /// Gets or Sets DataTypeDefXsd
        /// </summary>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum DataTypeDefXsd
        {
            /// <summary>
            /// Enum XsanyURIEnum for xs:anyURI
            /// </summary>
            [EnumMember(Value = "xs:anyURI")]
            XsanyURIEnum = 0,
            /// <summary>
            /// Enum Xsbase64BinaryEnum for xs:base64Binary
            /// </summary>
            [EnumMember(Value = "xs:base64Binary")]
            Xsbase64BinaryEnum = 1,
            /// <summary>
            /// Enum XsbooleanEnum for xs:boolean
            /// </summary>
            [EnumMember(Value = "xs:boolean")]
            XsbooleanEnum = 2,
            /// <summary>
            /// Enum XsdateEnum for xs:date
            /// </summary>
            [EnumMember(Value = "xs:date")]
            XsdateEnum = 3,
            /// <summary>
            /// Enum XsdateTimeEnum for xs:dateTime
            /// </summary>
            [EnumMember(Value = "xs:dateTime")]
            XsdateTimeEnum = 4,
            /// <summary>
            /// Enum XsdateTimeStampEnum for xs:dateTimeStamp
            /// </summary>
            [EnumMember(Value = "xs:dateTimeStamp")]
            XsdateTimeStampEnum = 5,
            /// <summary>
            /// Enum XsdecimalEnum for xs:decimal
            /// </summary>
            [EnumMember(Value = "xs:decimal")]
            XsdecimalEnum = 6,
            /// <summary>
            /// Enum XsdoubleEnum for xs:double
            /// </summary>
            [EnumMember(Value = "xs:double")]
            XsdoubleEnum = 7,
            /// <summary>
            /// Enum XsdurationEnum for xs:duration
            /// </summary>
            [EnumMember(Value = "xs:duration")]
            XsdurationEnum = 8,
            /// <summary>
            /// Enum XsfloatEnum for xs:float
            /// </summary>
            [EnumMember(Value = "xs:float")]
            XsfloatEnum = 9,
            /// <summary>
            /// Enum XsgDayEnum for xs:gDay
            /// </summary>
            [EnumMember(Value = "xs:gDay")]
            XsgDayEnum = 10,
            /// <summary>
            /// Enum XsgMonthEnum for xs:gMonth
            /// </summary>
            [EnumMember(Value = "xs:gMonth")]
            XsgMonthEnum = 11,
            /// <summary>
            /// Enum XsgMonthDayEnum for xs:gMonthDay
            /// </summary>
            [EnumMember(Value = "xs:gMonthDay")]
            XsgMonthDayEnum = 12,
            /// <summary>
            /// Enum XsgYearEnum for xs:gYear
            /// </summary>
            [EnumMember(Value = "xs:gYear")]
            XsgYearEnum = 13,
            /// <summary>
            /// Enum XsgYearMonthEnum for xs:gYearMonth
            /// </summary>
            [EnumMember(Value = "xs:gYearMonth")]
            XsgYearMonthEnum = 14,
            /// <summary>
            /// Enum XshexBinaryEnum for xs:hexBinary
            /// </summary>
            [EnumMember(Value = "xs:hexBinary")]
            XshexBinaryEnum = 15,
            /// <summary>
            /// Enum RdflangStringEnum for rdf:langString
            /// </summary>
            [EnumMember(Value = "rdf:langString")]
            RdflangStringEnum = 16,
            /// <summary>
            /// Enum XsstringEnum for xs:string
            /// </summary>
            [EnumMember(Value = "xs:string")]
            XsstringEnum = 17,
            /// <summary>
            /// Enum XstimeEnum for xs:time
            /// </summary>
            [EnumMember(Value = "xs:time")]
            XstimeEnum = 18,
            /// <summary>
            /// Enum XsdayTimeDurationEnum for xs:dayTimeDuration
            /// </summary>
            [EnumMember(Value = "xs:dayTimeDuration")]
            XsdayTimeDurationEnum = 19,
            /// <summary>
            /// Enum XsyearMonthDurationEnum for xs:yearMonthDuration
            /// </summary>
            [EnumMember(Value = "xs:yearMonthDuration")]
            XsyearMonthDurationEnum = 20,
            /// <summary>
            /// Enum XsintegerEnum for xs:integer
            /// </summary>
            [EnumMember(Value = "xs:integer")]
            XsintegerEnum = 21,
            /// <summary>
            /// Enum XslongEnum for xs:long
            /// </summary>
            [EnumMember(Value = "xs:long")]
            XslongEnum = 22,
            /// <summary>
            /// Enum XsintEnum for xs:int
            /// </summary>
            [EnumMember(Value = "xs:int")]
            XsintEnum = 23,
            /// <summary>
            /// Enum XsshortEnum for xs:short
            /// </summary>
            [EnumMember(Value = "xs:short")]
            XsshortEnum = 24,
            /// <summary>
            /// Enum XsbyteEnum for xs:byte
            /// </summary>
            [EnumMember(Value = "xs:byte")]
            XsbyteEnum = 25,
            /// <summary>
            /// Enum XsNonNegativeIntegerEnum for xs:NonNegativeInteger
            /// </summary>
            [EnumMember(Value = "xs:NonNegativeInteger")]
            XsNonNegativeIntegerEnum = 26,
            /// <summary>
            /// Enum XspositiveIntegerEnum for xs:positiveInteger
            /// </summary>
            [EnumMember(Value = "xs:positiveInteger")]
            XspositiveIntegerEnum = 27,
            /// <summary>
            /// Enum XsunsignedLongEnum for xs:unsignedLong
            /// </summary>
            [EnumMember(Value = "xs:unsignedLong")]
            XsunsignedLongEnum = 28,
            /// <summary>
            /// Enum XsunsignedIntEnum for xs:unsignedInt
            /// </summary>
            [EnumMember(Value = "xs:unsignedInt")]
            XsunsignedIntEnum = 29,
            /// <summary>
            /// Enum XsunsignedShortEnum for xs:unsignedShort
            /// </summary>
            [EnumMember(Value = "xs:unsignedShort")]
            XsunsignedShortEnum = 30,
            /// <summary>
            /// Enum XsunsignedByteEnum for xs:unsignedByte
            /// </summary>
            [EnumMember(Value = "xs:unsignedByte")]
            XsunsignedByteEnum = 31,
            /// <summary>
            /// Enum XsnonPositiveIntegerEnum for xs:nonPositiveInteger
            /// </summary>
            [EnumMember(Value = "xs:nonPositiveInteger")]
            XsnonPositiveIntegerEnum = 32,
            /// <summary>
            /// Enum XsnegativeIntegerEnum for xs:negativeInteger
            /// </summary>
            [EnumMember(Value = "xs:negativeInteger")]
            XsnegativeIntegerEnum = 33        }
}
